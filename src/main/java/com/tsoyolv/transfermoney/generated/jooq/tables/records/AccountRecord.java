/*
 * This file is generated by jOOQ.
 */
package com.tsoyolv.transfermoney.generated.jooq.tables.records;


import com.tsoyolv.transfermoney.generated.jooq.tables.Account;

import java.math.BigDecimal;
import java.math.BigInteger;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountRecord extends UpdatableRecordImpl<AccountRecord> implements Record5<BigInteger, String, String, BigDecimal, String> {

    private static final long serialVersionUID = -1205050625;

    /**
     * Setter for <code>PUBLIC.ACCOUNT.ACCOUNTID</code>.
     */
    public void setAccountid(BigInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.ACCOUNT.ACCOUNTID</code>.
     */
    public BigInteger getAccountid() {
        return (BigInteger) get(0);
    }

    /**
     * Setter for <code>PUBLIC.ACCOUNT.ACCOUNTNUMBER</code>.
     */
    public void setAccountnumber(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.ACCOUNT.ACCOUNTNUMBER</code>.
     */
    public String getAccountnumber() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.ACCOUNT.USERNAME</code>.
     */
    public void setUsername(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.ACCOUNT.USERNAME</code>.
     */
    public String getUsername() {
        return (String) get(2);
    }

    /**
     * Setter for <code>PUBLIC.ACCOUNT.BALANCE</code>.
     */
    public void setBalance(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.ACCOUNT.BALANCE</code>.
     */
    public BigDecimal getBalance() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>PUBLIC.ACCOUNT.CURRENCYCODE</code>.
     */
    public void setCurrencycode(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.ACCOUNT.CURRENCYCODE</code>.
     */
    public String getCurrencycode() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<BigInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<BigInteger, String, String, BigDecimal, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<BigInteger, String, String, BigDecimal, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigInteger> field1() {
        return Account.ACCOUNT.ACCOUNTID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Account.ACCOUNT.ACCOUNTNUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Account.ACCOUNT.USERNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field4() {
        return Account.ACCOUNT.BALANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Account.ACCOUNT.CURRENCYCODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigInteger component1() {
        return getAccountid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getAccountnumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component4() {
        return getBalance();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getCurrencycode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigInteger value1() {
        return getAccountid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getAccountnumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value4() {
        return getBalance();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getCurrencycode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value1(BigInteger value) {
        setAccountid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value2(String value) {
        setAccountnumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value3(String value) {
        setUsername(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value4(BigDecimal value) {
        setBalance(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value5(String value) {
        setCurrencycode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord values(BigInteger value1, String value2, String value3, BigDecimal value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountRecord
     */
    public AccountRecord() {
        super(Account.ACCOUNT);
    }

    /**
     * Create a detached, initialised AccountRecord
     */
    public AccountRecord(BigInteger accountid, String accountnumber, String username, BigDecimal balance, String currencycode) {
        super(Account.ACCOUNT);

        set(0, accountid);
        set(1, accountnumber);
        set(2, username);
        set(3, balance);
        set(4, currencycode);
    }
}
