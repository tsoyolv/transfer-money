/*
 * This file is generated by jOOQ.
 */
package com.tsoyolv.transfermoney.generated.jooq.tables.records;


import com.tsoyolv.transfermoney.generated.jooq.tables.Transaction;

import java.math.BigDecimal;
import java.math.BigInteger;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransactionRecord extends UpdatableRecordImpl<TransactionRecord> implements Record5<BigInteger, BigInteger, BigInteger, BigDecimal, String> {

    private static final long serialVersionUID = 369818002;

    /**
     * Setter for <code>PUBLIC.TRANSACTION.TRANSACTIONID</code>.
     */
    public void setTransactionid(BigInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.TRANSACTION.TRANSACTIONID</code>.
     */
    public BigInteger getTransactionid() {
        return (BigInteger) get(0);
    }

    /**
     * Setter for <code>PUBLIC.TRANSACTION.ACCOUNTFROMID</code>.
     */
    public void setAccountfromid(BigInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.TRANSACTION.ACCOUNTFROMID</code>.
     */
    public BigInteger getAccountfromid() {
        return (BigInteger) get(1);
    }

    /**
     * Setter for <code>PUBLIC.TRANSACTION.ACCOUNTTOID</code>.
     */
    public void setAccounttoid(BigInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.TRANSACTION.ACCOUNTTOID</code>.
     */
    public BigInteger getAccounttoid() {
        return (BigInteger) get(2);
    }

    /**
     * Setter for <code>PUBLIC.TRANSACTION.AMOUNT</code>.
     */
    public void setAmount(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.TRANSACTION.AMOUNT</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>PUBLIC.TRANSACTION.CURRENCYCODE</code>.
     */
    public void setCurrencycode(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.TRANSACTION.CURRENCYCODE</code>.
     */
    public String getCurrencycode() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<BigInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<BigInteger, BigInteger, BigInteger, BigDecimal, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<BigInteger, BigInteger, BigInteger, BigDecimal, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigInteger> field1() {
        return Transaction.TRANSACTION.TRANSACTIONID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigInteger> field2() {
        return Transaction.TRANSACTION.ACCOUNTFROMID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigInteger> field3() {
        return Transaction.TRANSACTION.ACCOUNTTOID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field4() {
        return Transaction.TRANSACTION.AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Transaction.TRANSACTION.CURRENCYCODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigInteger component1() {
        return getTransactionid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigInteger component2() {
        return getAccountfromid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigInteger component3() {
        return getAccounttoid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component4() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getCurrencycode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigInteger value1() {
        return getTransactionid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigInteger value2() {
        return getAccountfromid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigInteger value3() {
        return getAccounttoid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value4() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getCurrencycode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value1(BigInteger value) {
        setTransactionid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value2(BigInteger value) {
        setAccountfromid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value3(BigInteger value) {
        setAccounttoid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value4(BigDecimal value) {
        setAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value5(String value) {
        setCurrencycode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord values(BigInteger value1, BigInteger value2, BigInteger value3, BigDecimal value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionRecord
     */
    public TransactionRecord() {
        super(Transaction.TRANSACTION);
    }

    /**
     * Create a detached, initialised TransactionRecord
     */
    public TransactionRecord(BigInteger transactionid, BigInteger accountfromid, BigInteger accounttoid, BigDecimal amount, String currencycode) {
        super(Transaction.TRANSACTION);

        set(0, transactionid);
        set(1, accountfromid);
        set(2, accounttoid);
        set(3, amount);
        set(4, currencycode);
    }
}
